/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View.Panels;

import Controller.ControlTxt;
import Controller.ControllerExcel;
import View.Static;
import java.awt.BorderLayout;
import java.awt.Color;
import java.io.File;
import static java.lang.String.valueOf;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yatac
 */
public class PanelCalculate extends javax.swing.JPanel {

    ControllerExcel model_ex = new ControllerExcel();
    JFileChooser archivo_selec = new JFileChooser();
    File archivo;

    /**
     * Creates new form Calculate
     */
    public PanelCalculate() {
        initComponents();
        setBackground(new Color(0, 0, 0, 0));
        PanelContentCalc.setBackground(new Color(0, 0, 0, 0));
        listTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelContentCalc = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new View.Static.FondoPanelTxt();
        txtX = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new View.Static.FondoPanelTxt();
        txtY = new javax.swing.JTextField();
        ButtonAddData = new javax.swing.JLabel();
        ButtonAddFile = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableData = new javax.swing.JTable();
        ButtonCalculate = new javax.swing.JLabel();

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/X.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        txtX.setBackground(new java.awt.Color(217, 217, 217));
        txtX.setFont(new java.awt.Font("Leelawadee UI", 0, 18)); // NOI18N
        txtX.setForeground(new java.awt.Color(0, 51, 102));
        txtX.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtX.setBorder(null);
        txtX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtXKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtX, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtX, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon/Y.png"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        txtY.setBackground(new java.awt.Color(217, 217, 217));
        txtY.setFont(new java.awt.Font("Leelawadee UI", 0, 18)); // NOI18N
        txtY.setForeground(new java.awt.Color(0, 51, 102));
        txtY.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtY.setBorder(null);
        txtY.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtYKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtY, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtY, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ButtonAddData.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ButtonAddData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/ButtonAddData.png"))); // NOI18N
        ButtonAddData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonAddDataMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ButtonAddDataMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ButtonAddDataMouseExited(evt);
            }
        });

        ButtonAddFile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ButtonAddFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/ButtonAddFile.png"))); // NOI18N
        ButtonAddFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonAddFileMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ButtonAddFileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ButtonAddFileMouseExited(evt);
            }
        });

        jButton1.setText("CLEAR TABLE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        TableData.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        TableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "X", "Y"
            }
        ));
        TableData.setRowHeight(40);
        jScrollPane1.setViewportView(TableData);

        ButtonCalculate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ButtonCalculate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/ButtonCalculate.png"))); // NOI18N
        ButtonCalculate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonCalculateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ButtonCalculateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ButtonCalculateMouseExited(evt);
            }
        });

        javax.swing.GroupLayout PanelContentCalcLayout = new javax.swing.GroupLayout(PanelContentCalc);
        PanelContentCalc.setLayout(PanelContentCalcLayout);
        PanelContentCalcLayout.setHorizontalGroup(
            PanelContentCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelContentCalcLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ButtonCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelContentCalcLayout.createSequentialGroup()
                .addGroup(PanelContentCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelContentCalcLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelContentCalcLayout.createSequentialGroup()
                        .addGroup(PanelContentCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelContentCalcLayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(PanelContentCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelContentCalcLayout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(19, 19, 19)
                                        .addGroup(PanelContentCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(PanelContentCalcLayout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE))
                            .addGroup(PanelContentCalcLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(PanelContentCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ButtonAddFile, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ButtonAddData, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37))
        );
        PanelContentCalcLayout.setVerticalGroup(
            PanelContentCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelContentCalcLayout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelContentCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelContentCalcLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(PanelContentCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelContentCalcLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelContentCalcLayout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(ButtonAddData, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ButtonAddFile, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelContentCalc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelContentCalc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonAddDataMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonAddDataMouseEntered
        ButtonAddData.setIcon(new ImageIcon(getClass().getResource("/img/buttons/ButtonAddDataoOpaque.png")));
    }//GEN-LAST:event_ButtonAddDataMouseEntered

    private void ButtonAddDataMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonAddDataMouseExited
        ButtonAddData.setIcon(new ImageIcon(getClass().getResource("/img/buttons/ButtonAddData.png")));
    }//GEN-LAST:event_ButtonAddDataMouseExited

    private void ButtonAddFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonAddFileMouseClicked
        verifAumentDate();
    }//GEN-LAST:event_ButtonAddFileMouseClicked

    private void ButtonAddDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonAddDataMouseClicked
        /*
        * Insert Dates
         */
        if (txtX.getText().isEmpty() || txtY.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese datos validos", "", JOptionPane.ERROR_MESSAGE);
        } else {
            if (insertXY(Double.parseDouble(txtX.getText()), Double.parseDouble(txtY.getText()))) {
                listTable();
                clearCamp();
            }
        }
    }//GEN-LAST:event_ButtonAddDataMouseClicked

    private void ButtonAddFileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonAddFileMouseEntered
        ButtonAddFile.setIcon(new ImageIcon(getClass().getResource("/img/buttons/ButtonAddFileOpaque.png")));
    }//GEN-LAST:event_ButtonAddFileMouseEntered

    private void ButtonAddFileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonAddFileMouseExited
        ButtonAddFile.setIcon(new ImageIcon(getClass().getResource("/img/buttons/ButtonAddFile.png")));
    }//GEN-LAST:event_ButtonAddFileMouseExited

    private void ButtonCalculateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonCalculateMouseEntered
        ButtonCalculate.setIcon(new ImageIcon(getClass().getResource("/img/buttons/ButtonCalculateOpaque.png")));
    }//GEN-LAST:event_ButtonCalculateMouseEntered

    private void ButtonCalculateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonCalculateMouseExited
        ButtonCalculate.setIcon(new ImageIcon(getClass().getResource("/img/buttons/ButtonCalculate.png")));
    }//GEN-LAST:event_ButtonCalculateMouseExited

    private void txtXKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtXKeyTyped
        char c = evt.getKeyChar();

        // Permitir teclas de control como backspace y delete
        if (Character.isISOControl(c)) {
            txtX.setEditable(true);
            return;
        }

        // Permitir el punto decimal si no se ha ingresado previamente
        if (c == '.' && txtX.getText().contains(".")) {
            txtX.setEditable(false);
            evt.consume();
            return;
        }

        // Permitir solo dígitos y el punto decimal
        if (!Character.isDigit(c) && c != '.') {
            txtX.setEditable(false);
            evt.consume();
        } else {
            // Validar que solo haya hasta 2 decimales
            String text = txtX.getText();
            int dotIndex = text.indexOf('.');
            if (dotIndex != -1 && text.substring(dotIndex).length() > 2) {
                txtX.setEditable(false);
                evt.consume();
            } else {
                txtX.setEditable(true);
            }
        }
    }//GEN-LAST:event_txtXKeyTyped

    private void txtYKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtYKeyTyped
        char c = evt.getKeyChar();

        // Permitir teclas de control como backspace y delete
        if (Character.isISOControl(c)) {
            txtY.setEditable(true);
            return;
        }

        // Permitir el punto decimal si no se ha ingresado previamente
        if (c == '.' && txtY.getText().contains(".")) {
            txtY.setEditable(false);
            evt.consume();
            return;
        }

        // Permitir solo dígitos y el punto decimal
        if (!Character.isDigit(c) && c != '.') {
            txtY.setEditable(false);
            evt.consume();
        } else {
            // Validar que solo haya hasta 2 decimales
            String text = txtY.getText();
            int dotIndex = text.indexOf('.');
            if (dotIndex != -1 && text.substring(dotIndex).length() > 2) {
                txtY.setEditable(false);
                evt.consume();
            } else {
                txtY.setEditable(true);
            }
        }
    }//GEN-LAST:event_txtYKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Static.xList = new ArrayList<>();
        Static.yList = new ArrayList<>();
        listTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ButtonCalculateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonCalculateMouseClicked
        /*Exportacion XY*/
        if (Static.xList.size() != 0) {
            ControlTxt.exportTxt();
            addContainer(new PanelGraphic(), PanelContentCalc.getWidth(), PanelContentCalc.getHeight(), PanelContentCalc);
        }else {
            JOptionPane.showMessageDialog(null, "La tabla no contiene ningun dato","",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonCalculateMouseClicked

    /**
     * ****************Methods*******************
     */
    public boolean insertXY(double x, double y) {
        if (valueOf(x).isEmpty() || valueOf(y).isEmpty()) {
            return false;
        } else {
            Static.xList.add(x);
            Static.yList.add(y);
            return true;
        }
    }

    public void listTable() {
        DefaultTableModel modelo = new DefaultTableModel();
        String[] columnas = {"X", "Y"};
        modelo.setColumnIdentifiers(columnas);
        for (int i = 0; i < Static.xList.size(); i++) {
            Object[] o = new Object[2];
            o[0] = Static.xList.get(i);
            o[1] = Static.yList.get(i);
            modelo.addRow(o);
        }
        TableData.setModel(modelo);
    }

    public void clearCamp() {
        txtX.setText("");
        txtY.setText("");
    }

    public void verifAumentDate() {
        // Opciones disponibles para el usuario
        String[] opciones = {"Aumentar Datos ", "Remplazar Datos"};

        // Mostrar el JOptionPane con las opciones y guardar la opción seleccionada
        int opcionSeleccionada = JOptionPane.showOptionDialog(
                null, // Componente padre (en este caso, ninguno)
                "¿Como desea insertar los datos?", // Mensaje a mostrar
                "", // Título del diálogo
                JOptionPane.DEFAULT_OPTION, // Tipo de opción predeterminada
                JOptionPane.PLAIN_MESSAGE, // Tipo de mensaje
                null, // Icono personalizado (en este caso, ninguno)
                opciones, // Opciones disponibles
                opciones[0] // Opción predeterminada
        );

        if (opcionSeleccionada == 0) {
            importExcel();
            aumentData();
        } else if (opcionSeleccionada == 1) {
            Static.xList = new ArrayList();
            Static.yList = new ArrayList();
            importExcel();
            aument();
        }

    }

    public void importExcel() {
        if (archivo_selec.showDialog(null, "Seleccionar archivo") == JFileChooser.APPROVE_OPTION) { // CUADRO DE SLECCION DE CARPETA 
            archivo = archivo_selec.getSelectedFile();
            if (archivo.getName().endsWith("xls") || archivo.getName().endsWith("xlsx")) { //Si el archivo tiene extension excel
                /*Enviamos por pamaremtro el archivo y
                    *el llenado de datos ala tabla*/
                model_ex.importar(archivo, TableData);
                JOptionPane.showMessageDialog(null, "\n Importacion Exitosa",
                        "IMPORTAR", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione un archivo excel");
            }
        }
    }

    void aumentData() {
        aument();
        listTable();
    }

    void aument() {
        /*LLenado de datos nuevos en la lsita estitca*/
        for (int i = 0; i < TableData.getRowCount(); i++) {
            System.out.println("Agregando");
            Static.xList.add(Double.parseDouble(valueOf(TableData.getValueAt(i, 0))));
            Static.yList.add(Double.parseDouble(valueOf(TableData.getValueAt(i, 1))));
        }
    }

    /**
     *
     * @param p Panel de Ingreso
     * @param width Ancho
     * @param height Alto
     * @param c contenedor
     */
    public void addContainer(JPanel p, int width, int height, JPanel c) {
        p.setSize(width, height);
        p.setLocation(0, 0);
        c.removeAll();
        c.add(p, BorderLayout.CENTER);
        c.revalidate();
        c.repaint();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ButtonAddData;
    private javax.swing.JLabel ButtonAddFile;
    private javax.swing.JLabel ButtonCalculate;
    private javax.swing.JPanel PanelContentCalc;
    private javax.swing.JTable TableData;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtX;
    private javax.swing.JTextField txtY;
    // End of variables declaration//GEN-END:variables
}
